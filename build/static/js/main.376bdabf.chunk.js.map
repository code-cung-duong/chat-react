{"version":3,"sources":["firebase/Config.js","hooks/UseFirestore.js","context/AuthProvider.js","context/AppProvider.js","firebase/Service.js","components/ChatRoom/IMessage .js","components/ChatRoom/Message.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/RoomLists.js","components/ChatRoom/UserInfo.js","components/ChatRoom/UserLists.js","components/ChatRoom/SideBar.js","components/ChatRoom/ChatRoom.js","components/Login/Login.js","modals/AddRoom.js","modals/InviteMember.js","modals/ListMember.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","UseFirestore","collection","condition","useState","documents","setDocuments","useEffect","dataRef","orderBy","compareValue","length","where","fieldName","operator","onSnapshot","snap","docs","map","doc","data","id","AuthContext","React","createContext","AuthProvider","children","user","setUser","isLoading","setIsLoading","history","useHistory","unsub","onAuthStateChanged","displayName","email","uid","phoneNumber","photoURL","push","Provider","value","style","fontSize","position","top","left","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isShowMembersVisible","setIsShowMembersVisible","selectedRoomId","setSelectedRoomId","isInviteMemberVisible","setIsInviteMemberVisible","useContext","roomCondition","useMemo","rooms","selectedRoom","Array","from","find","room","memberCondition","members","clearState","addDocuments","add","createAt","FieldValue","serverTimestamp","generateKeywords","name","split","filter","word","flagArray","result","stringArray","i","findPermutation","k","join","keywords","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Div1Styled","styled","div","Div3Styled","formatDate","seconds","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","IMessage","text","createdAt","placement","title","Text","className","Div2Styled","Message","size","src","HeaderStyled","ButtonGroupStyled","WrapperStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form1","inputRef","useRef","messagesCondition","messages","setIsLoadingMes","current","focus","isLoadingMes","messageListRef","scrollTop","scrollHeight","delay","useLayoutEffect","handleOnSubmit","trim","roomId","setFieldsValue","message","menu","Item","onClick","icon","UserOutlined","UsergroupAddOutlined","LogoutOutlined","description","Button","bordered","SettingOutlined","overlay","Loading3QuartersOutlined","spin","color","ref","ms","form","onChange","e","target","onPressEnter","placeholder","autoComplete","width","SendOutlined","ChromeOutlined","rotate","extra","type","ghost","Panel","Collapse","PanelStyled","LinkStyled","Typography","Link","CollapseStyled","RoomLists","defaultActiveKey","header","textShadow","backgroundColor","transition","UnlockTwoTone","float","LockTwoTone","UserInfoStyled","UserInfo","PoweroffOutlined","border","signOut","DivStyled","UserLists","users","photoUrl","SidebarStyled","SideBar","span","ChatRoom","Title","fbProvider","FacebookAuthProvider","ggProvider","GoogleAuthProvider","Login","handleLoginGoogle","a","signInWithPopup","additionalUserInfo","isNewUser","providerId","toLowerCase","alert","justify","height","textAlign","margin","level","GoogleOutlined","FacebookFilled","marginTop","AddRoom","visible","onOk","getFieldValue","getFieldsValue","resetFields","info","onCancel","layout","label","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","console","log","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","snapshot","includes","InviteMemberModal","setValue","update","val","len","success","destroyOnClose","mode","newValue","ListMember","handleOk","borderRadius","EllipsisOutlined","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.376bdabf.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/firebase-analytics'\r\nimport 'firebase/firebase-auth'\r\nimport 'firebase/firestore'\r\n\r\n// var firebaseConfig = {\r\n//     apiKey: \"AIzaSyAS3LrWMEyoNDAoP3JZrTkBFDxT-d7Bqho\",\r\n//     authDomain: \"huongmin-d997b.firebaseapp.com\",\r\n//     databaseURL: \"https://huongmin-d997b-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n//     projectId: \"huongmin-d997b\",\r\n//     storageBucket: \"huongmin-d997b.appspot.com\",\r\n//     messagingSenderId: \"782301853177\",\r\n//     appId: \"1:782301853177:web:5a619932d8c19e1354b928\",\r\n//     measurementId: \"G-FF4W1DRJ2G\"\r\n// };\r\n// // Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBlm-W6GLaMQFC4PCEMMZ61AaNFmBh6DdY\",\r\n    authDomain: \"chat-app-hihi.firebaseapp.com\",\r\n    projectId: \"chat-app-hihi\",\r\n    storageBucket: \"chat-app-hihi.appspot.com\",\r\n    messagingSenderId: \"883987244279\",\r\n    appId: \"1:883987244279:web:aaae422fdb9a61e9669ff2\",\r\n    measurementId: \"G-L65WGMD5Y7\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//     auth.useEmulator('http://localhost:9099');\r\n//     db.useEmulator('localhost', '8080');\r\n// }\r\n\r\n\r\nexport {\r\n    auth,\r\n    db\r\n};\r\nexport default firebase;\r\n","import {useEffect, useState} from 'react';\r\nimport {db} from '../firebase/Config';\r\n\r\nconst UseFirestore = (collection, condition) => {\r\n    const [documents, setDocuments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let dataRef = db.collection(collection).orderBy('createAt');\r\n        if (condition) {\r\n            if (!condition.compareValue || !condition.compareValue.length) {\r\n                setDocuments([]);\r\n                return;\r\n            }\r\n\r\n            dataRef = dataRef.where(condition.fieldName, condition.operator, condition.compareValue);\r\n        }\r\n\r\n        const unsubcribe = dataRef.onSnapshot((snap) => {\r\n            const documents = snap.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }));\r\n            setDocuments(documents);\r\n\r\n        })\r\n        return unsubcribe;\r\n    }, [collection, condition])\r\n    return documents;\r\n\r\n}\r\nexport default UseFirestore;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom';\r\nimport {\r\n    auth\r\n} from '../firebase/Config';\r\nimport {\r\n    Spin\r\n} from 'antd';\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({\r\n    children\r\n}) {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                const {\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    phoneNumber,\r\n                    photoURL\r\n                } = user;\r\n                setUser({\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    phoneNumber,\r\n                    photoURL\r\n                });\r\n                setIsLoading(false);\r\n                history.push(\"/\");\r\n                return;\r\n            }\r\n            setUser({});\r\n            setIsLoading(false);\r\n            history.push(\"/login\");\r\n        });\r\n        return() => {\r\n            unsub();\r\n        };\r\n    }, [history]);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={user}>\r\n            {\r\n            isLoading ? <Spin style={\r\n                {\r\n                    fontSize:'20pt',\r\n                    position: 'fixed',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                }\r\n            }/> : children\r\n        } </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthProvider;\r\n","import React, {useContext, useMemo, useState} from 'react'\r\nimport UseFirestore from '../hooks/UseFirestore';\r\nimport {AuthContext} from './AuthProvider';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\n\r\nfunction AppProvider({children}) {\r\n\r\n\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n    const [isShowMembersVisible, setIsShowMembersVisible] = useState(false);\r\n    const [selectedRoomId, setSelectedRoomId] = useState('');\r\n    const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n\r\n\r\n    const {uid} = useContext(AuthContext);\r\n\r\n    const roomCondition = useMemo(() => {\r\n        return {fieldName: 'members', operator: 'array-contains', compareValue: uid}\r\n    }, [uid])\r\n\r\n    const rooms = UseFirestore('rooms', roomCondition)\r\n\r\n\r\n    const selectedRoom = useMemo(() => Array.from(rooms).find((room) => room.id === selectedRoomId) || {}, [rooms, selectedRoomId]);\r\n    const memberCondition = useMemo(() => {\r\n        return {fieldName: 'uid', operator: 'in', compareValue: selectedRoom.members};\r\n    }, [selectedRoom.members])\r\n\r\n    const members = UseFirestore('users', memberCondition)\r\n\r\n    const clearState = () => {\r\n        setSelectedRoomId('');\r\n        setIsAddRoomVisible(false);\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    return (<AppContext.Provider value={\r\n        {\r\n            rooms,\r\n            isAddRoomVisible,\r\n            setIsAddRoomVisible,\r\n            selectedRoomId,\r\n            setSelectedRoomId,\r\n            selectedRoom,\r\n            members,\r\n            isInviteMemberVisible,\r\n            setIsInviteMemberVisible,\r\n            clearState,\r\n            isShowMembersVisible,\r\n            setIsShowMembersVisible\r\n        }\r\n    }> {children} </AppContext.Provider>)\r\n}\r\nexport default AppProvider;\r\n","import firebase, {db} from \"./Config\";\r\n\r\n\r\nexport const addDocuments = (collection, data) => {\r\n    const query = db.collection(collection);\r\n\r\n    query.add({\r\n        ...data,\r\n        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\n\r\n\r\nexport const generateKeywords = (displayName) => {\r\n\r\n    const name = displayName.split(' ').filter((word) => word);\r\n\r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n\r\n    /**\r\n   * khoi tao mang flag false\r\n   * dung de danh dau xem gia tri\r\n   * tai vi tri nay da duoc su dung\r\n   * hay chua\r\n   **/\r\n    for (let i = 0; i < length; i++) {\r\n        flagArray[i] = false;\r\n    }\r\n\r\n    const createKeywords = (name) => {\r\n        const arrName = [];\r\n        let curName = '';\r\n        name.split('').forEach((letter) => {\r\n            curName += letter;\r\n            arrName.push(curName);\r\n        });\r\n        return arrName;\r\n    };\r\n\r\n    function findPermutation(k) {\r\n        for (let i = 0; i < length; i++) {\r\n            if (! flagArray[i]) {\r\n                flagArray[i] = true;\r\n                result[k] = name[i];\r\n\r\n                if (k === length - 1) {\r\n                    stringArray.push(result.join(' '));\r\n                }\r\n\r\n                findPermutation(k + 1);\r\n                flagArray[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    findPermutation(0);\r\n\r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n        const words = createKeywords(cur);\r\n        return [\r\n            ...acc,\r\n            ...words\r\n        ];\r\n    }, []);\r\n    keywords.push(\"*\");\r\n    return keywords;\r\n};\r\n","import {Tooltip, Typography} from 'antd';\r\nimport {formatRelative} from 'date-fns';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Div1Styled = styled.div `\r\n  margin-bottom: 17px;\r\n  margin-left: 9px;\r\n  display: flex;\r\n  width: 99%;\r\n  justify-content:flex-end;\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {\r\n    overflow-y: visible;\r\n    color: #fff;\r\n    max-width: 400px;\r\n    min-width: 20px;\r\n    word-wrap:break-word;\r\n    font-size: 15px;\r\n    text-align: justify;\r\n  }\r\n`;\r\n\r\n\r\nconst Div3Styled = styled.div `\r\n\r\n\r\n  max-width: 800px;\r\n    background-color: #0099ff;\r\n    border: 1px solid #ddd;\r\n    border-radius: 30px;\r\n    padding: 3px 18px 5px 18px;\r\n    magrin-left: 10px;\r\n    min-width: 40px;\r\n    text-align: justify;\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n\r\nfunction IMessage({text, photoURL, displayName, createdAt}) {\r\n    return (<Div1Styled>\r\n        <Div3Styled>\r\n            <Tooltip placement=\"left\"\r\n                title={\r\n                    formatDate(createdAt?.seconds)\r\n            }>\r\n                <Typography.Text className='content'> {text}</Typography.Text>\r\n            </Tooltip>\r\n        </Div3Styled>\r\n    </Div1Styled>);\r\n}\r\n\r\nexport default IMessage;\r\n","import {Tooltip, Typography} from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport {formatRelative} from 'date-fns';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Div1Styled = styled.div `\r\n  margin-bottom: 17px;\r\n  margin-left: 5px;\r\n  display: flex;\r\n  width: 900px;\r\n  justify-content:flex-start;\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {  \r\n    overflow-y: visible;\r\n    color: #123;\r\n    max-width: 400px;\r\n    min-width: 20px;\r\n    word-wrap:break-word;\r\n    font-size: 15px;\r\n    text-align: justify;\r\n  }\r\n`;\r\n\r\nconst Div2Styled = styled.div `\r\n  magrin: 5px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nconst Div3Styled = styled.div `\r\nmax-width: 800px;\r\nbackground-color: rgb(228 230 235);\r\nborder: 1px solid #ddd;\r\nborder-radius: 30px;\r\npadding: 3px 18px 5px 18px;\r\nmin-width: 40px;\r\ntext-align: justify;\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n\r\nfunction Message({text, photoURL, displayName, createdAt}) {\r\n    return (\r\n        <Div1Styled>\r\n            <Div2Styled>\r\n                <Tooltip title={displayName}\r\n                    placement=\"left\">\r\n                    <Avatar size='default'\r\n                        src={photoURL}>\r\n                        {\r\n                        photoURL ? '' : displayName.charAt(0)\r\n                    } </Avatar>\r\n                </Tooltip>\r\n            </Div2Styled>\r\n            <Div3Styled>\r\n                <Tooltip placement=\"left\"\r\n                    title={formatDate(createdAt?.seconds)}>\r\n                    <Typography.Text className='content'>\r\n                        {text}</Typography.Text>\r\n                </Tooltip>\r\n            </Div3Styled>\r\n        </Div1Styled>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import {\r\n    ChromeOutlined,\r\n    Loading3QuartersOutlined,\r\n    LogoutOutlined,\r\n    SendOutlined,\r\n    SettingOutlined,\r\n    UsergroupAddOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Menu,\r\n    Result\r\n} from 'antd';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { delay } from 'lodash';\r\nimport React, {\r\n    useContext,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState\r\n} from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { addDocuments } from '../../firebase/Service';\r\nimport UseFirestore from '../../hooks/UseFirestore';\r\nimport IMessage from './IMessage ';\r\nimport Message from './Message';\r\n\r\n\r\nconst HeaderStyled = styled.div `\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n  box-shadow: -3px 13px 6px -10px rgb(230 230 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n    }\r\n\r\n    &__description {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div `\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div `\r\n  height: 100vh;\r\n`;\r\n\r\nconst ContentStyled = styled.div `\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div `\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\n\r\nfunction ChatWindow() {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [form1] = useForm();\r\n    const {\r\n        selectedRoom,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        setIsInviteMemberVisible,\r\n        setIsAddRoomVisible,\r\n        setIsShowMembersVisible,\r\n    } = useContext(AppContext);\r\n\r\n    const inputRef = useRef('');\r\n\r\n    const messagesCondition = useMemo(() => {\r\n        return {fieldName: 'roomId', operator: '==', compareValue: selectedRoomId};\r\n    }, [selectedRoomId])\r\n    const messages = UseFirestore('messages', messagesCondition)\r\n\r\n    useEffect(() => {\r\n        setIsLoadingMes(true);\r\n        if(selectedRoomId){\r\n            inputRef.current.focus();\r\n        }   \r\n        \r\n    }, [selectedRoomId])\r\n\r\n    \r\n    const [isLoadingMes, setIsLoadingMes] = useState(true);\r\n    useEffect(() => {\r\n        if (messageListRef.current) {\r\n            messageListRef.current.scrollTop = messageListRef.current.scrollHeight + 50;\r\n        }\r\n        \r\n        \r\n        delay(() => {\r\n            \r\n            setIsLoadingMes(false);\r\n        }, 200, '');\r\n        \r\n    }, [messages])\r\n\r\n    useLayoutEffect(()=>{\r\n        if (messageListRef.current) {\r\n            messageListRef.current.scrollTop = messageListRef.current.scrollHeight + 50;\r\n        }\r\n\r\n    },)\r\n    \r\n\r\n    const loadMessage = ()=> {\r\n        const load =  messages.map((ms) => {     \r\n            return ms.uid === uid ? \r\n            <IMessage key={\r\n            ms.id\r\n        }\r\n        text={\r\n            ms.text\r\n        }\r\n        photoURL={\r\n            ms.photoURL\r\n        }\r\n        displayName={\r\n            ms.displayName\r\n        }\r\n        createdAt={\r\n            ms.createAt\r\n        }/> : <Message key={\r\n            ms.id\r\n        }\r\n        text={\r\n            ms.text\r\n        }\r\n        photoURL={\r\n            ms.photoURL\r\n        }\r\n        displayName={\r\n            ms.displayName\r\n        }\r\n        createdAt={\r\n            ms.createAt\r\n        }/>\r\n        \r\n    })\r\n    return load;\r\n\r\n}\r\n\r\n    const {uid, displayName, photoURL} = useContext(AuthContext);\r\n\r\n    \r\n\r\n    const messageListRef = useRef(null);\r\n    const handleOnSubmit = () => {\r\n        if (inputValue.trim().length) {\r\n            addDocuments('messages', {\r\n                text: inputValue,\r\n                uid,\r\n                photoURL,\r\n                displayName,\r\n                roomId: selectedRoomId\r\n            });\r\n            form1.setFieldsValue({message: ''});\r\n            inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n\r\n    const menu = (<Menu>\r\n        <Menu.Item onClick={\r\n                () => setIsShowMembersVisible(true)\r\n            } icon={<UserOutlined/>}\r\n            key=\"1\">Xem thành viên</Menu.Item>\r\n        <Menu.Item onClick={\r\n                () => setIsInviteMemberVisible(true)\r\n            }\r\n            icon={<UsergroupAddOutlined/>}\r\n            key=\"2\">Mời bạn bè</Menu.Item>\r\n        <Menu.Item onClick={\r\n                () => setSelectedRoomId('')\r\n            }\r\n            icon={<LogoutOutlined/>}\r\n            key=\"3\">Thoát</Menu.Item>\r\n    </Menu>);\r\n\r\n\r\n           \r\n    return (<> {\r\n        selectedRoomId ? <WrapperStyled>\r\n            <HeaderStyled>\r\n                <div className='header__info'>\r\n                    <p className='header__title'> {\r\n                        !selectedRoom ? '' : selectedRoom.name\r\n                    }</p>\r\n                    <span className='header__description'> {\r\n                        !selectedRoom ? '' : selectedRoom.description\r\n                    }</span>\r\n                </div>\r\n                <ButtonGroupStyled> \r\n                    <Dropdown.Button style={{bordered: 'none'}} icon={<SettingOutlined/>}\r\n                        overlay={menu}></Dropdown.Button>\r\n\r\n                </ButtonGroupStyled>\r\n\r\n\r\n            </HeaderStyled>\r\n\r\n\r\n            <ContentStyled> {\r\n                isLoadingMes === true ? <>\r\n                    <Loading3QuartersOutlined spin\r\n                        style={\r\n                            {\r\n                                fontSize: '56px',\r\n                                color: '#08c',\r\n                                position: 'absolute',\r\n                                top: '50%',\r\n                                left: '50%'\r\n                            }\r\n                        }/></> : <MessageListStyled className=\"listMessage\" ref={messageListRef}> {loadMessage()\r\n                } </MessageListStyled>\r\n            }\r\n\r\n\r\n                <FormStyled form={form1}>\r\n                    <Form.Item name='message'>\r\n                        <Input ref={inputRef}\r\n                            onChange={handleOnChange}\r\n                            onPressEnter={handleOnSubmit}\r\n                            placeholder='Nhấn tổ hợp Window + . để thêm emoji nhé . . .'\r\n                            bordered={false}\r\n                            autoComplete='off'/>\r\n                    </Form.Item>\r\n                    <Button style={{width: '40px',color: 'blue'}} icon={<SendOutlined style={{fontSize: '15pt'}} />}  onClick={handleOnSubmit}>\r\n                    </Button>\r\n                </FormStyled>\r\n            </ContentStyled>\r\n        </WrapperStyled> : <><Result icon={\r\n                    <ChromeOutlined\r\n                spin\r\n                rotate='100'/>\r\n                }\r\n                title=\"Click chọn một nhóm để bắt đầu nào\"\r\n                style={\r\n                    {color: 'red'}\r\n                }\r\n                extra={\r\n                    <Button\r\n                type=\"primary\"\r\n                ghost\r\n                    onClick={\r\n() => setIsAddRoomVisible(true)}>\r\n                Bạn có thể tạo nhóm và mời bạn bè vào tại đây</Button>\r\n                }/></>\r\n    } </>);\r\n\r\n}\r\nexport default ChatWindow;\r\n","import { LockTwoTone, UnlockTwoTone } from '@ant-design/icons';\r\nimport { Button, Collapse, Typography } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst {Panel} = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  \r\n\r\n\r\n  &&& {\r\n    .ant-collapse-header\r\n    ,\r\n    p {\r\n      color: blue;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 10px;\r\n      max-height: 290px;\r\n      overflow-y: auto;\r\n\r\n    .ant-typography:hover {\r\n      textShadow: rgb(222 222 222) 0px 0px 7px;\r\n      background-color: #f1f1f1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    .ant-typography{\r\n      color: #000;\r\n      font-weight: 400;\r\n    }\r\n      \r\n    }\r\n\r\n    .add-room {\r\n      color: #456;\r\n      margin: 15px 0 10px 90px;\r\n      padding: 5px;\r\n         \r\n      border: 1px solid #aaa;\r\n    }\r\n\r\n    .add-room:hover{\r\n      color: #fff;\r\n      background-color: #ccc;\r\n      border: 1px solid #bbb;\r\n      box-shadow: 3px 3px 16px 0px #aaa;\r\n    }\r\n\r\n    \r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: -1px;\r\n  color: #ddd; \r\n  padding: 15px 10px 15px 10px;\r\n  border-radius: 5px;\r\n  \r\n`;\r\n\r\nconst CollapseStyled = styled(Collapse)`\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: 0px 9px 7px -9px #ccc;\r\n\r\n`;\r\n\r\n\r\nfunction RoomLists() {\r\n\r\n    const {rooms, setIsAddRoomVisible, setSelectedRoomId, selectedRoomId} = useContext(AppContext);\r\n\r\n\r\n    return (<CollapseStyled defaultActiveKey=\"0\" ghost>\r\n        <PanelStyled header=\"Nhóm của bạn\" key=\"1\"> {\r\n            rooms.map((room) => (<LinkStyled key={\r\n                    room.id\r\n                }\r\n                onClick={\r\n                    () => setSelectedRoomId(room.id)\r\n                }\r\n                style={\r\n                    room.id === selectedRoomId ? {\r\n                        textShadow: 'rgb(222 222 222) 0px 0px 7px',\r\n                        backgroundColor: '#f1f1f1',\r\n                        transition: 'all 0.2s',\r\n                        color: '#000',\r\n                        // fontWeight: '500'\r\n                    } : {}\r\n            } className=\"chu\"> {\r\n                room.name\r\n          }\r\n          <>\r\n            {\r\n              Array.from(room.members).length !== 1 ? <UnlockTwoTone style={{fontSize: '16pt', float: 'right'}} /> :\r\n              <LockTwoTone style={{fontSize: '16pt', float: 'right'}} />\r\n            }\r\n          </>\r\n          \r\n          </LinkStyled>))\r\n        }\r\n\r\n            <Button type='text'\r\n                className='add-room'\r\n                onClick={\r\n                    () => setIsAddRoomVisible(true)\r\n            }>\r\n                Thêm nhóm\r\n            </Button>\r\n\r\n        </PanelStyled>\r\n    </CollapseStyled>);\r\n}\r\n\r\nexport default RoomLists;\r\n","import { PoweroffOutlined } from '@ant-design/icons';\r\nimport {Avatar, Button, Tooltip, Typography} from 'antd';\r\nimport React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from '../../context/AppProvider';\r\nimport {AuthContext} from '../../context/AuthProvider';\r\nimport {auth} from '../../firebase/Config';\r\n\r\n\r\nconst UserInfoStyled = styled.div ` \r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 12px 16px;\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: -4px -1px 9px 1px #ccc;\r\n\r\n.username {\r\n  margin-left: 10px;\r\n  font-size: 16pt;\r\n  font-weight: 700;\r\n}\r\n\r\n.logout:hover{\r\n    color: red;\r\n    border-radius: 50%;\r\n}\r\n\r\n.logout{\r\n    border-radius: 50%;\r\n}\r\n`;\r\n\r\n\r\nfunction UserInfo() {\r\n\r\n    const {displayName, photoURL} = useContext(AuthContext);\r\n    const {clearState} = useContext(AppContext);\r\n\r\n    return (<UserInfoStyled>\r\n        <div>\r\n            <Tooltip placement=\"right\" title={displayName} style={{}}>\r\n                <Avatar size='large' src={photoURL}> {\r\n                photoURL ? '' : displayName?.charAt(0)\r\n            }</Avatar>\r\n            </Tooltip>\r\n            \r\n            <Typography.Text className=\"username\">Chat</Typography.Text>\r\n        </div>\r\n        <Tooltip title=\"Đăng xuất\" placement=\"top\">\r\n            <Button className=\"logout\" icon={<PoweroffOutlined />} style={{border: 'none'}}\r\n            onClick={\r\n                () => {\r\n                    auth.signOut();\r\n                    clearState();\r\n                }\r\n        }></Button>\r\n        </Tooltip>\r\n        \r\n    </UserInfoStyled>);\r\n}\r\n\r\nexport default UserInfo;\r\n","import { Avatar, Collapse, Typography } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport UseFirestore from '../../hooks/UseFirestore';\r\nconst {Panel} = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n\r\n  \r\n\r\n\r\n  &&& {\r\n    .ant-collapse-header,\r\n    p {\r\n      color: blue;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 40px;\r\n      max-height: 290px;\r\n      overflow-y: auto;\r\n    }\r\n\r\n    .add-room {\r\n      color: #123;\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: blue;\r\n  \r\n`;\r\n\r\nconst DivStyled = styled.div `\r\n    display: flex;\r\n    margin: 15px 10px 10px 0px;\r\n    .user{\r\n        color: #123;\r\n        margin-left: 10px;\r\n    }\r\n    .status{\r\n      color: #123;\r\n      position: absolute;\r\n      right: 8%;\r\n    }\r\n`;\r\n\r\nconst CollapseStyled = styled(Collapse)`\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: 0px 9px 7px -9px #ccc;\r\n\r\n`;\r\n\r\n\r\nfunction UserLists() {\r\n\r\n\r\n    const {uid} = useContext(AuthContext);\r\n\r\n    const users = UseFirestore('users', '');\r\n\r\n    \r\n    return (\r\n        <CollapseStyled defaultActiveKey=\"0\" ghost>\r\n            <PanelStyled header=\"Danh sách bạn bè\" key=\"1\">\r\n                {\r\n                users.filter(user => user.uid !== uid).map((user) => (\r\n                    <DivStyled key={\r\n                        user.uid\r\n                    }>\r\n\r\n                        <Avatar size=\"small\"\r\n                            src={\r\n                                user.photoUrl\r\n                        }>\r\n                            {\r\n                            user.photoUrl ? '' : user.displayName.charAt(0)\r\n                        }</Avatar>\r\n                        <LinkStyled className=\"user\">\r\n                            {\r\n                            user.displayName\r\n                        }</LinkStyled>\r\n\r\n\r\n                        {/* <p className=\"status\">Online</p> */}\r\n                    </DivStyled>\r\n                ))\r\n            } </PanelStyled>\r\n        </CollapseStyled>\r\n    );\r\n}\r\n\r\nexport default UserLists;\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport RoomLists from './RoomLists';\r\nimport UserInfo from './UserInfo';\r\nimport UserLists from \"./UserLists\";\r\n\r\nconst SidebarStyled = styled.div `\r\n  background: #fff;\r\n  color: black;\r\n  height: 100vh;\r\n  border-right: 1px solid #ccc;\r\n  magrin: 20px\r\n`;\r\n\r\nfunction SideBar() {\r\n  return (\r\n    <SidebarStyled style={{}}>\r\n      <Row>\r\n        <Col span=\"24\">\r\n          <UserInfo/>\r\n          <RoomLists/>\r\n          <UserLists />\r\n        </Col>\r\n      </Row>\r\n    </SidebarStyled>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport {Row, Col} from 'antd'\r\nimport ChatWindow from './ChatWindow';\r\nimport SideBar from './SideBar';\r\n\r\nfunction ChatRoom() {\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span=\"5\">\r\n          <SideBar/>\r\n        </Col>\r\n        <Col span=\"19\">\r\n          <ChatWindow/>\r\n        </Col>\r\n\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n","import {FacebookFilled, GoogleOutlined} from '@ant-design/icons';\r\nimport firebase from '@firebase/app';\r\nimport {Button, Col, Row, Typography} from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport {auth} from '../../firebase/Config';\r\nimport {addDocuments, generateKeywords} from '../../firebase/Service';\r\nconst {Title} = Typography\r\n\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\nconst ggProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nfunction Login() {\r\n\r\n    const handleLoginGoogle = async () => {\r\n        const {additionalUserInfo, user} = await auth.signInWithPopup(ggProvider);\r\n\r\n        if (additionalUserInfo.isNewUser) {\r\n            addDocuments('users', {\r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                photoUrl: user.photoURL,\r\n                uid: user.uid,\r\n                providerId: additionalUserInfo.providerId,\r\n                keywords: generateKeywords(user.displayName?.toLowerCase())\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleLoginFacebook = () => {\r\n        auth.signInWithPopup(fbProvider);\r\n    };\r\n    useEffect(() => {\r\n        alert(\"Website không dùng responsive nhé.\\n         Vui lòng sử dụng trên máy tính.\");\r\n       \r\n    }, [])\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row justify='center'\r\n                style={\r\n                    {height: 800}\r\n            }>\r\n                <Col span={10}>\r\n                    <Title style={\r\n                            {\r\n                                textAlign: 'center',\r\n                                margin: '30px'\r\n                            }\r\n                        }\r\n                        level={2}>\r\n                        Đăng nhập để tham gia với chúng tôi\r\n                    </Title>\r\n                    <Button icon={<GoogleOutlined/>}\r\n                        style={\r\n                            {\r\n                                width: '100%',\r\n                                fontSize: '16px',\r\n                                color: 'red',\r\n                                height: '40px'\r\n\r\n                            }\r\n                        }\r\n                        onClick={\r\n                            () => handleLoginGoogle()\r\n                    }>\r\n                        Đăng nhập bằng Google\r\n                    </Button>\r\n                    <Button icon={<FacebookFilled/>}\r\n                        style={\r\n                            {\r\n                                marginTop: '5px',\r\n                                width: '100%',\r\n                                fontSize: '16px',\r\n                                color: 'blue',\r\n                                height: '40px'\r\n                            }\r\n                        }\r\n                        onClick={\r\n                            () => handleLoginFacebook()\r\n                    }>\r\n                        Đăng nhập bằng Facebook (beta)\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import {Input, message} from 'antd';\r\nimport Form, {useForm} from 'antd/lib/form/Form';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, {useContext} from 'react';\r\nimport {AppContext} from '../context/AppProvider';\r\nimport {AuthContext} from '../context/AuthProvider';\r\nimport {addDocuments} from '../firebase/Service';\r\n\r\nexport default function AddRoom() {\r\n\r\n    const [form1] = useForm();\r\n\r\n    const {isAddRoomVisible, setIsAddRoomVisible} = useContext(AppContext);\r\n\r\n    const {uid} = useContext(AuthContext);\r\n\r\n    const handleOk = () => {\r\n\r\n        if (form1.getFieldValue()?.name && form1.getFieldValue()?.description) {\r\n            addDocuments('rooms', {\r\n                ...form1.getFieldsValue(),\r\n                members: [uid]\r\n            });\r\n            form1.resetFields();\r\n            setIsAddRoomVisible(false);\r\n            \r\n        } else {\r\n            message.info('Bạn cần nhập đầy đủ thông tin');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsAddRoomVisible(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal title='Tạo phòng'\r\n                visible={isAddRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}>\r\n                <Form layout=\"vertical\"\r\n                    form={form1}>\r\n                    <FormItem label=\"Tên phòng\" name=\"name\">\r\n                        <Input name=\"name\" placeholder=\"Nhập tên phòng\" autoComplete=\"off\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"Mô tả\" name=\"description\">\r\n                        <Input name=\"description\" placeholder=\"Nhập mô tả\" autoComplete=\"off\"></Input>\r\n                    </FormItem>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import {Form, message, Select, Spin} from 'antd'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport debounce from 'lodash.debounce'\r\nimport React, {useContext, useState} from 'react'\r\nimport {AppContext} from '../context/AppProvider'\r\nimport {db} from '../firebase/Config'\r\n\r\nfunction DebounceSelect({\r\n    fetchOptions,\r\n    debounceTimeout = 300,\r\n    curMembers,\r\n    ...props\r\n}) { // Search: abcddassdfasdf\r\n\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const debounceFetcher = React.useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            setOptions([]);\r\n            setFetching(true);\r\n\r\n            fetchOptions(value, curMembers).then((newOptions) => {\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n    React.useEffect(() => {\r\n        return() => { // clear when unmount\r\n            setOptions([]);\r\n        };\r\n    }, []);\r\n    console.log(options);\r\n    return (<Select labelInValue\r\n        filterOption={false}\r\n        onSearch={debounceFetcher}\r\n        notFoundContent={\r\n            fetching ? <Spin size='small'/> : <p style={{marginTop: '10px', color: '#345'}}>Không tìm thấy thành viên . . .</p>\r\n        }\r\n        {...props}> {\r\n        options.map((opt) => (<Select.Option key={\r\n                opt.value\r\n            }\r\n            value={\r\n                opt.value\r\n            }\r\n            title={\r\n                opt.label\r\n        }>\r\n            <Avatar size='small'\r\n                src={\r\n                    opt.photoURL\r\n            }> {\r\n                opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()\r\n            } </Avatar>\r\n            {\r\n            ` ${\r\n                opt.label\r\n            }`\r\n        } </Select.Option>))\r\n    } </Select>);\r\n}\r\n\r\nasync function fetchUserList(search, curMembers) {\r\n    return db.collection('users').where('keywords', 'array-contains', search?.toLowerCase()).orderBy('displayName').limit(20).get().then((snapshot) => {\r\n\r\n        return snapshot.docs.map((doc) => ({label: doc.data().displayName, value: doc.data().uid, photoURL: doc.data().photoURL})).filter((opt) => ! curMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n    const {isInviteMemberVisible, setIsInviteMemberVisible, selectedRoomId, selectedRoom} = useContext(AppContext);\r\n    const [value, setValue] = useState([]);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = () => { // reset form value\r\n        form.resetFields();\r\n        setValue([]);\r\n        // update members in current room\r\n        const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n        roomRef.update({\r\n            members: [\r\n                ...selectedRoom.members,\r\n                ...value.map((val) => val.value)\r\n            ]\r\n        });\r\n        const len = value.length;\r\n        if (len !== 0) {\r\n            message.success('Đã thêm ' + len + ' thành viên');\r\n        }\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => { // reset form value\r\n        form.resetFields();\r\n        setValue([]);\r\n\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    return (<div>\r\n        <Modal title='Mời thêm bạn bè'\r\n            visible={isInviteMemberVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}>\r\n            <Form form={form}\r\n                layout='vertical'>\r\n                <p>Họ tên</p>\r\n                <DebounceSelect mode='multiple' name='search-user' label='Tên các thành viên' \r\n                    \r\n                    value={value}\r\n                    \r\n                    placeholder='Gõ * để hiển thị tất cả'\r\n                    fetchOptions={fetchUserList}\r\n                    onChange={\r\n                        (newValue) => setValue(newValue)\r\n                    }\r\n                    style={\r\n                        {width: '100%'}\r\n                    }\r\n                    curMembers={\r\n                        selectedRoom.members\r\n                    }/>\r\n            </Form>\r\n        </Modal>\r\n    </div>);\r\n}\r\n","import {\r\n    EllipsisOutlined\r\n} from '@ant-design/icons';\r\nimport { Button, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { AuthContext } from '../context/AuthProvider';\r\n\r\nconst LinkStyled = styled(Typography.Text)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: blue;\r\n`;\r\n\r\nconst DivStyled = styled.div `\r\n    display: flex;\r\n    margin: 15px 10px 10px 0px;\r\n    align-item: center;\r\n    .user{\r\n        color: #123;\r\n        margin: 7px 15px 9px 15px;\r\n        font-weight: 500;\r\n    }\r\n    .status{\r\n      color: #123;\r\n      position: absolute;\r\n      right: 8%;\r\n    }\r\n    p{\r\n        margin-top:6px;\r\n    }\r\n`;\r\n\r\nexport default function ListMember() {\r\n\r\n    const {members, setIsShowMembersVisible, isShowMembersVisible} = useContext(AppContext);\r\n    const {uid} = useContext(AuthContext);\r\n    const handleOk = () => {\r\n        setIsShowMembersVisible(false);\r\n    }\r\n\r\n\r\n    return (<Modal title={\r\n            \"Danh sách thành viên (\" + Array.from(members).length + \")\"\r\n        }\r\n        visible={isShowMembersVisible}\r\n        onCancel={handleOk}\r\n        onOk={handleOk}> {\r\n        Array.from(members).map((user) => (<DivStyled key={\r\n            user.uid\r\n        }>\r\n\r\n            <Avatar size=\"large\"\r\n                src={\r\n                    user.photoUrl\r\n            }> {\r\n                user.photoUrl ? '' : user.displayName.charAt(0)\r\n            }</Avatar>\r\n            <LinkStyled className=\"user\"> {\r\n                uid === user.uid ? 'Bạn' : user.displayName\r\n            }</LinkStyled>\r\n\r\n            <Button style={\r\n                    {\r\n                        borderRadius: '50%',\r\n                        float: 'right',\r\n                        position: 'absolute',\r\n                        left: '85%',\r\n                        marginTop: '2px'\r\n                    }\r\n                }\r\n                icon={<EllipsisOutlined style={{fontSize:'15pt',marginTop:'3px'}} />}></Button>\r\n            {} </DivStyled>))\r\n    } </Modal>)\r\n}\r\n","import {\n    BrowserRouter,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport './App.css';\nimport ChatRoom from './components/ChatRoom/ChatRoom';\nimport Login from './components/Login/Login';\nimport AppProvider from './context/AppProvider';\nimport AuthProvider from './context/AuthProvider';\nimport AddRoom from './modals/AddRoom';\nimport InviteMember from './modals/InviteMember';\nimport ListMember from './modals/ListMember';\nfunction App() {\n    return (\n        <BrowserRouter>\n            <AuthProvider>\n                <AppProvider>\n                    <Switch>\n                        <Route path=\"/login\"><Login/></Route>\n                        <Route path=\"/\"><ChatRoom/></Route>\n\n                    </Switch>\n                    <AddRoom/>\n                    <InviteMember/>\n                    <ListMember/>\n                </AppProvider>\n\n            </AuthProvider>\n\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}