{"version":3,"sources":["firebase/Config.js","hooks/UseFirestore.js","context/AuthProvider.js","context/AppProvider.js","firebase/Service.js","components/ChatRoom/IMessage .js","components/ChatRoom/Message.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/RoomLists.js","components/ChatRoom/UserInfo.js","components/ChatRoom/UserLists.js","components/ChatRoom/SideBar.js","components/ChatRoom/ChatRoom.js","components/Login/Login.js","modals/AddRoom.js","modals/InviteMember.js","modals/ListMember.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","require","UseFirestore","collection","condition","useState","documents","setDocuments","useEffect","dataRef","orderBy","compareValue","length","where","fieldName","operator","onSnapshot","snap","docs","map","doc","data","id","AuthContext","React","createContext","AuthProvider","children","user","setUser","isLoading","setIsLoading","history","useHistory","unsub","onAuthStateChanged","displayName","email","uid","phoneNumber","photoURL","countNotify","status","last_changed","push","document","title","Provider","value","style","fontSize","position","top","left","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isShowMembersVisible","setIsShowMembersVisible","selectedRoomId","setSelectedRoomId","isInviteMemberVisible","setIsInviteMemberVisible","useContext","roomCondition","useMemo","rooms","selectedRoom","Array","from","find","room","memberCondition","members","clearState","addDocuments","add","createAt","FieldValue","serverTimestamp","set","generateKeywords","name","split","filter","word","flagArray","result","stringArray","i","findPermutation","k","join","keywords","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Div1Styled","styled","div","Div3Styled","formatDate","seconds","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","IMessage","text","createdAt","placement","Text","className","Div2Styled","Message","size","src","marginLeft","HeaderStyled","ButtonGroupStyled","WrapperStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form1","inputRef","useRef","isLoadingMes","setIsLoadingMes","messageListRef","tab","setTab","messagesCondition","messages","current","focus","userRef","isOfflineForFirestore","isOnlineForFirestore","isAwayForFirestore","database","ref","on","snapshot","val","undefined","update","onDisconnect","then","window","addEventListener","abc","useCallback","visibilityState","delay","oldData","u","console","log","useLayoutEffect","scrollTop","scrollHeight","getElementsByClassName","play","handleOnSubmit","trim","roomId","get","setFieldsValue","message","handleOnChange","e","target","menu","Item","onClick","icon","UserOutlined","UsergroupAddOutlined","LogoutOutlined","description","Button","bordered","SettingOutlined","overlay","Loading3QuartersOutlined","spin","color","ms","form","onChange","onPressEnter","placeholder","autoComplete","width","SendOutlined","ChromeOutlined","extra","type","ghost","Panel","Collapse","PanelStyled","LinkStyled","Typography","Link","CollapseStyled","RoomLists","item","de","item2","defaultActiveKey","header","textShadow","backgroundColor","transition","LockTwoTone","float","UnlockTwoTone","margin","UserInfoStyled","UserInfo","PoweroffOutlined","border","signOut","DivStyled","UserLists","users","photoUrl","SidebarStyled","SideBar","span","ChatRoom","Title","fbProvider","FacebookAuthProvider","ggProvider","GoogleAuthProvider","Login","handleLoginGoogle","a","Notification","permission","signInWithPopup","additionalUserInfo","isNewUser","providerId","toLowerCase","alert","requestPermission","justify","height","textAlign","level","GoogleOutlined","FacebookFilled","marginTop","AddRoom","visible","onOk","getFieldValue","getFieldsValue","resetFields","roomid","count","info","onCancel","layout","label","rules","required","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","includes","InviteMemberModal","setValue","len","success","destroyOnClose","mode","newValue","ListMember","handleOk","borderRadius","EllipsisOutlined","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f057121d.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/firebase-analytics'\r\nimport 'firebase/firebase-auth'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCT6UcJ1fSROa6XrtINMkdxatAgSt5LU_s\",\r\n  authDomain: \"huong-min-hoho.firebaseapp.com\",\r\n  databaseURL: \"https://huong-min-hoho-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"huong-min-hoho\",\r\n  storageBucket: \"huong-min-hoho.appspot.com\",\r\n  messagingSenderId: \"316009393400\",\r\n  appId: \"1:316009393400:web:3f95e2e0595156060b5f0d\",\r\n  measurementId: \"G-69J2PN8Y5Z\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nrequire('firebase/app');\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//     auth.useEmulator('http://localhost:9099');\r\n//     db.useEmulator('localhost', '8080');\r\n// }\r\n\r\n\r\nexport {\r\n    auth,\r\n    db\r\n};\r\nexport default firebase;\r\n","import {useEffect, useState} from 'react';\r\nimport {db} from '../firebase/Config';\r\n\r\nconst UseFirestore = (collection, condition) => {\r\n    const [documents, setDocuments] = useState([]);\r\n    useEffect(() => {\r\n        let dataRef = db.collection(collection).orderBy('createAt');\r\n        if (condition) {\r\n            if (!condition.compareValue || !condition.compareValue.length) {\r\n                setDocuments([]);\r\n                return;\r\n            }\r\n            dataRef = dataRef.where(condition.fieldName, condition.operator, condition.compareValue);\r\n        }\r\n        const unsubcribe = dataRef.onSnapshot((snap) => {\r\n            const documents = snap.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }));\r\n            setDocuments(documents);\r\n        })\r\n\r\n        return unsubcribe;\r\n    }, [collection, condition])\r\n    return documents;\r\n}\r\nexport default UseFirestore;\r\n","import { Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase/Config';\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged((user) => {\r\n\r\n            if (user) {\r\n                const {\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    phoneNumber,\r\n                    photoURL,\r\n                    countNotify,\r\n                    status,\r\n                    last_changed,\r\n                } = user;\r\n\r\n                setUser({\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    phoneNumber,\r\n                    photoURL,\r\n                    countNotify,\r\n                    status,\r\n                    last_changed,\r\n                });\r\n                setIsLoading(false);\r\n                history.push(\"/\");\r\n                document.title = \"Fake Messenger\"\r\n                return;\r\n            }\r\n            setUser({});\r\n            setIsLoading(false);\r\n            history.push(\"/login\");\r\n            document.title = \"Fake Messenger - Đăng nhập\"\r\n        });\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, [history]);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={\r\n            { user, setUser }\r\n        }>\r\n            {\r\n                isLoading ? <Spin style={\r\n                    {\r\n                        fontSize: '20pt',\r\n                        position: 'fixed',\r\n                        top: '50%',\r\n                        left: '50%'\r\n                    }\r\n                } /> : children\r\n            } </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthProvider;\r\n","import React, {useContext, useMemo, useState} from 'react';\r\nimport UseFirestore from '../hooks/UseFirestore';\r\nimport {AuthContext} from './AuthProvider';\r\nexport const AppContext = React.createContext();\r\n\r\n\r\nfunction AppProvider({children}) {\r\n\r\n\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n    const [isShowMembersVisible, setIsShowMembersVisible] = useState(false);\r\n    const [selectedRoomId, setSelectedRoomId] = useState('');\r\n    const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n\r\n    const {user: {\r\n            uid\r\n        }} = useContext(AuthContext);\r\n\r\n    const roomCondition = useMemo(() => {\r\n        return {fieldName: 'members', operator: 'array-contains', compareValue: uid}\r\n    }, [uid])\r\n\r\n    const rooms = UseFirestore('rooms', roomCondition)\r\n\r\n    const selectedRoom = useMemo(() => Array.from(rooms).find((room) => room.id === selectedRoomId) || {}, [rooms, selectedRoomId]);\r\n\r\n    const memberCondition = useMemo(() => {\r\n        return {fieldName: 'uid', operator: 'in', compareValue: selectedRoom.members};\r\n    }, [selectedRoom.members])\r\n\r\n    const members = UseFirestore('users', memberCondition)\r\n\r\n    const clearState = () => {\r\n        setSelectedRoomId('');\r\n        setIsAddRoomVisible(false);\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider value={\r\n            {\r\n                rooms,\r\n                isAddRoomVisible,\r\n                setIsAddRoomVisible,\r\n                selectedRoomId,\r\n                setSelectedRoomId,\r\n                selectedRoom,\r\n                members,\r\n                isInviteMemberVisible,\r\n                setIsInviteMemberVisible,\r\n                clearState,\r\n                isShowMembersVisible,\r\n                setIsShowMembersVisible,\r\n            }\r\n        }>\r\n            {children} </AppContext.Provider>\r\n    )\r\n}\r\nexport default AppProvider;\r\n","import firebase, {db} from \"./Config\";\r\n\r\n\r\nexport const addDocuments = (collection, data) => {\r\n    const query = db.collection(collection);\r\n\r\n    query.add({\r\n        ...data,\r\n        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\n\r\nexport const setDocuments = (collection, data) => {\r\n    const query = db.collection(collection).doc(data.uid);\r\n\r\n    query.set({\r\n        ...data,\r\n        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\n\r\n\r\nexport const generateKeywords = (displayName) => {\r\n\r\n    const name = displayName.split(' ').filter((word) => word);\r\n\r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n\r\n    /**\r\n   * khoi tao mang flag false\r\n   * dung de danh dau xem gia tri\r\n   * tai vi tri nay da duoc su dung\r\n   * hay chua\r\n   **/\r\n    for (let i = 0; i < length; i++) {\r\n        flagArray[i] = false;\r\n    }\r\n\r\n    const createKeywords = (name) => {\r\n        const arrName = [];\r\n        let curName = '';\r\n        name.split('').forEach((letter) => {\r\n            curName += letter;\r\n            arrName.push(curName);\r\n        });\r\n        return arrName;\r\n    };\r\n\r\n    function findPermutation(k) {\r\n        for (let i = 0; i < length; i++) {\r\n            if (! flagArray[i]) {\r\n                flagArray[i] = true;\r\n                result[k] = name[i];\r\n\r\n                if (k === length - 1) {\r\n                    stringArray.push(result.join(' '));\r\n                }\r\n\r\n                findPermutation(k + 1);\r\n                flagArray[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    findPermutation(0);\r\n\r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n        const words = createKeywords(cur);\r\n        return [\r\n            ...acc,\r\n            ...words\r\n        ];\r\n    }, []);\r\n    keywords.push(\"*\");\r\n    return keywords;\r\n};\r\n","import { Tooltip, Typography } from 'antd';\r\nimport { formatRelative } from 'date-fns';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Div1Styled = styled.div`\r\n  margin-bottom: 17px;\r\n  margin-left: 9px;\r\n  display: flex;\r\n  width: 99%;\r\n  justify-content:flex-end;\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {\r\n    overflow-y: visible;\r\n    color: #fff;\r\n    max-width: 400px;\r\n    min-width: 20px;\r\n    word-wrap:break-word;\r\n    font-size: 15px;\r\n    text-align: justify;\r\n  }\r\n\r\n  .ant-tooltip-inner{\r\n      magrin-left: '-20px';\r\n  }\r\n`;\r\n\r\n\r\nconst Div3Styled = styled.div`\r\n    max-width: 800px;\r\n    background-color: #0099ff;\r\n    border: 1px solid #ddd;\r\n    border-radius: 30px;\r\n    padding: 3px 18px 5px 18px;\r\n    magrin-left: 10px;\r\n    min-width: 40px;\r\n    text-align: justify;\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n\r\nfunction IMessage({ text, createdAt }) {\r\n    return (\r\n        <Div1Styled>\r\n            <Div3Styled>\r\n                <Tooltip placement=\"left\"\r\n                    title={\r\n                        formatDate(createdAt?.seconds)\r\n                    }>\r\n                    <Typography.Text className='content'>\r\n                        {text}</Typography.Text>\r\n                </Tooltip>\r\n            </Div3Styled>\r\n        </Div1Styled>\r\n    );\r\n}\r\n\r\nexport default IMessage;\r\n","import { Tooltip, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { formatRelative } from 'date-fns';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Div1Styled = styled.div`\r\n  margin-bottom: 17px;\r\n  margin-left: 5px;\r\n  display: flex;\r\n  width: 900px;\r\n  justify-content:flex-start;\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {  \r\n    overflow-y: visible;\r\n    color: #123;\r\n    max-width: 400px;\r\n    min-width: 20px;\r\n    word-wrap:break-word;\r\n    font-size: 15px;\r\n    text-align: justify;\r\n  }\r\n`;\r\n\r\nconst Div2Styled = styled.div`\r\n  magrin: 5px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nconst Div3Styled = styled.div`\r\n    max-width: 800px;\r\n    background-color: rgb(228 230 235);\r\n    border: 1px solid #ddd;\r\n    border-radius: 30px;\r\n    padding: 3px 18px 5px 18px;\r\n    min-width: 40px;\r\n    text-align: justify;\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n\r\nfunction Message({ text, photoURL, displayName, createdAt }) {\r\n\r\n    return (\r\n        <Div1Styled>\r\n            <Div2Styled>\r\n                <Tooltip title={displayName}\r\n                    placement=\"left\">\r\n                    <Avatar size='default'\r\n                        src={photoURL}>\r\n                        {\r\n                            photoURL ? '' : displayName.charAt(0)\r\n                        } </Avatar>\r\n                </Tooltip>\r\n            </Div2Styled>\r\n            <Div3Styled>\r\n                <Tooltip placement=\"left\" style={{marginLeft: '10px'}}\r\n                    title={\r\n                        formatDate(createdAt?.seconds)\r\n                    }>\r\n                    <Typography.Text className='content'>\r\n                        {text}</Typography.Text>\r\n                </Tooltip>\r\n            </Div3Styled>\r\n        </Div1Styled>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import {\r\n    ChromeOutlined,\r\n    Loading3QuartersOutlined,\r\n    LogoutOutlined,\r\n    SendOutlined,\r\n    SettingOutlined,\r\n    UsergroupAddOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Menu,\r\n    Result\r\n} from 'antd';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { delay } from 'lodash';\r\nimport React, {\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState\r\n} from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport firebase, { db } from '../../firebase/Config';\r\nimport { addDocuments } from '../../firebase/Service';\r\nimport UseFirestore from '../../hooks/UseFirestore';\r\nimport IMessage from './IMessage ';\r\nimport Message from './Message';\r\n\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n  box-shadow: -3px 13px 6px -10px rgb(230 230 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n    }\r\n\r\n    &__description {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  .load{\r\n    fontSize: '56px',\r\n    color: '#08c',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%'\r\n  }\r\n\r\n  .settingIcon{\r\n      font-size: '15px';\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\n  height: 100vh;\r\n`;\r\n\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\n\r\nfunction ChatWindow() {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [form1] = useForm();\r\n    const {\r\n        selectedRoom,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        setIsInviteMemberVisible,\r\n        setIsAddRoomVisible,\r\n        setIsShowMembersVisible,\r\n        members\r\n    } = useContext(AppContext);\r\n    const {\r\n        user: {\r\n            uid,\r\n            displayName,\r\n            photoURL,\r\n            countNotify\r\n        }\r\n    } = useContext(AuthContext);\r\n\r\n    const inputRef = useRef(null);\r\n    const [isLoadingMes, setIsLoadingMes] = useState(true);\r\n    const messageListRef = useRef(null);\r\n    const [tab, setTab] = useState('');\r\n\r\n    const messagesCondition = useMemo(() => {\r\n        return { fieldName: 'roomId', operator: '==', compareValue: selectedRoomId };\r\n    }, [selectedRoomId])\r\n\r\n    const messages = UseFirestore('messages', messagesCondition);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoadingMes(true);\r\n        if (selectedRoomId) {\r\n            inputRef.current.focus();\r\n        }\r\n\r\n\r\n    }, [selectedRoomId])\r\n\r\n\r\n    const userRef = firebase.firestore().doc('/users/' + uid);\r\n\r\n    var isOfflineForFirestore = useMemo(() => ({ status: 'offline', last_changed: firebase.firestore.FieldValue.serverTimestamp() }), []);\r\n\r\n    var isOnlineForFirestore = useMemo(() => ({ status: 'online', last_changed: firebase.firestore.FieldValue.serverTimestamp() }), []);\r\n\r\n    var isAwayForFirestore = useMemo(() => ({ status: 'away', last_changed: firebase.firestore.FieldValue.serverTimestamp() }), []);\r\n\r\n    useEffect(() => {\r\n        const abc = firebase.database().ref('.info/connected').on('value', function (snapshot) {\r\n            if (snapshot?.val() === false && uid !== undefined) {\r\n                userRef?.update(isOfflineForFirestore);\r\n                return;\r\n            };\r\n            if (uid === undefined) {\r\n                userRef?.update(isOfflineForFirestore);\r\n            } else if (uid !== undefined && tab !== 'hidden') {\r\n                firebase.database().ref('/status/' + uid)?.onDisconnect().update(isOfflineForFirestore).then(function () {\r\n                    userRef?.update(isOnlineForFirestore);\r\n                });\r\n            }\r\n        });\r\n\r\n        return abc;\r\n\r\n\r\n    }, [uid])\r\n\r\n\r\n    window.addEventListener(\"unload\", () => {\r\n        userRef?.update(isOfflineForFirestore);\r\n    })\r\n\r\n    const abc = useCallback(() => {\r\n        if (uid === undefined) {\r\n            userRef?.update(isOfflineForFirestore);\r\n        } else if (document.visibilityState === 'hidden' && tab !== 'hidden' && uid !== undefined) {\r\n            userRef?.update(isAwayForFirestore);\r\n            setTab('hidden');\r\n        } else if (document.visibilityState === 'visible' && tab !== 'visible' && uid !== undefined) {\r\n            setTab('visible');\r\n            userRef?.update(isOnlineForFirestore);\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('visibilitychange', abc, false);\r\n    }, [abc])\r\n\r\n\r\n    useEffect(() => {\r\n        delay(() => {\r\n            setIsLoadingMes(false);\r\n        }, 10, '');\r\n\r\n        return () => { }\r\n    }, [messages])\r\n\r\n\r\n    useEffect(() => {\r\n        const abc = db.collection('notifys').doc(uid).onSnapshot((snap) => {\r\n            const oldData = snap?.data()?.countNotify;\r\n            if (selectedRoomId && oldData !== undefined) {\r\n                db.collection('notifys')?.doc(uid).update({\r\n                    countNotify: [...Array.from(oldData).filter((u) => u !== selectedRoomId)]\r\n                })\r\n                console.log(\"da xem\");\r\n            }\r\n            return abc;\r\n        })\r\n        return abc;\r\n    }, [selectedRoomId])\r\n\r\n    useLayoutEffect(() => {\r\n        if (messageListRef.current) {\r\n            messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n        }\r\n    })\r\n\r\n    const loadMessage = () => {\r\n        const load = messages.map((ms) => {\r\n            return ms.uid === uid ? <IMessage key={\r\n                ms.id\r\n            }\r\n                text={\r\n                    ms.text\r\n                }\r\n                photoURL={\r\n                    ms.photoURL\r\n                }\r\n                displayName={\r\n                    ms.displayName\r\n                }\r\n                createdAt={\r\n                    ms.createAt\r\n                } /> : <Message key={\r\n                    ms.id\r\n                }\r\n                    text={\r\n                        ms.text\r\n                    }\r\n                    photoURL={\r\n                        ms.photoURL\r\n                    }\r\n                    displayName={\r\n                        ms.displayName\r\n                    }\r\n                    createdAt={\r\n                        ms.createAt\r\n                    } />\r\n\r\n        })\r\n        return load;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abc = db.collection('notifys').doc(uid).onSnapshot((snap) => {\r\n            console.log(\"tin nhan moi\");\r\n            const oldData = snap?.data()?.countNotify;\r\n            if (document.visibilityState !== 'visible') {\r\n                document.getElementsByClassName(\"audio\")[0]?.play();\r\n            }\r\n\r\n            document.title = oldData.length === 0 ? 'Fake Messenger' : \"(\" + oldData.length + \") Fake Messenger\";\r\n\r\n            return abc;\r\n        })\r\n        return abc;\r\n    }, [])\r\n\r\n\r\n    const loadingListMessage = () => (isLoadingMes === true ? <Loading3QuartersOutlined spin\r\n        style={\r\n            {\r\n                fontSize: '56px',\r\n                color: '#08c',\r\n                position: 'absolute',\r\n                top: '45%',\r\n                left: '50%'\r\n            }\r\n        } /> : <MessageListStyled className=\"listMessage\"\r\n            ref={messageListRef}>\r\n        {\r\n            loadMessage()\r\n        } </MessageListStyled>)\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        if (inputValue.trim().length) {\r\n\r\n            addDocuments('messages', {\r\n                text: inputValue,\r\n                uid,\r\n                photoURL,\r\n                displayName,\r\n                roomId: selectedRoomId\r\n            });\r\n\r\n            members?.filter((u) => u.uid !== uid).forEach((user) => {\r\n                db.collection('notifys').doc(user.id).get().then((doc) => {\r\n                    db.collection('notifys').doc(user.id).update({\r\n                        countNotify: [\r\n                            ...doc.data().countNotify,\r\n                            selectedRoomId\r\n                        ],\r\n                        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n                    })\r\n                });\r\n            })\r\n\r\n            form1.setFieldsValue({ message: '' });\r\n            inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n\r\n    const menu = useMemo(() => (\r\n        <Menu>\r\n            <Menu.Item onClick={\r\n                () => setIsShowMembersVisible(true)\r\n            }\r\n                icon={<UserOutlined />}\r\n                key=\"1\">Xem thành viên</Menu.Item>\r\n            <Menu.Item onClick={\r\n                () => setIsInviteMemberVisible(true)\r\n            }\r\n                icon={<UsergroupAddOutlined />}\r\n                key=\"2\">Mời bạn bè</Menu.Item>\r\n            <Menu.Item onClick={\r\n                () => setSelectedRoomId('')\r\n            }\r\n                icon={<LogoutOutlined />}\r\n                key=\"3\">Thoát</Menu.Item>\r\n        </Menu>\r\n    ), [setIsShowMembersVisible, setIsInviteMemberVisible, setSelectedRoomId]);\r\n\r\n    const noSelectRoom = () => (\r\n        <Result icon={\r\n            <ChromeOutlined\r\n                spin />\r\n        }\r\n            title=\"Click chọn một nhóm để bắt đầu nào\"\r\n            style={\r\n                { color: 'red' }\r\n            }\r\n            extra={\r\n                <Button\r\n                    type=\"primary\"\r\n                    ghost\r\n                    onClick={\r\n                        () => setIsAddRoomVisible(true)}>\r\n                    Bạn có thể tạo nhóm và mời bạn bè vào tại đây</Button>\r\n            } />\r\n    )\r\n\r\n    const sendForm = () => (\r\n        <FormStyled form={form1}>\r\n            <Form.Item name='message'>\r\n                <Input ref={inputRef}\r\n                    onChange={handleOnChange}\r\n                    onPressEnter={handleOnSubmit}\r\n                    placeholder='Nhấn tổ hợp Window + . để thêm emoji . . .'\r\n                    bordered={false}\r\n                    autoComplete='off' />\r\n            </Form.Item>\r\n            <Button style={\r\n                {\r\n                    width: '40px',\r\n                    color: 'blue'\r\n                }\r\n            }\r\n                icon={\r\n                    <SendOutlined\r\n                        className=\"settingIcon\" />\r\n                }\r\n                onClick={handleOnSubmit}></Button>\r\n        </FormStyled>\r\n    )\r\n\r\n    const mainLayout = () => (\r\n        <WrapperStyled>\r\n            <HeaderStyled>\r\n                <div className='header__info'>\r\n                    <p className='header__title'>\r\n                        {\r\n                            !selectedRoom ? '' : selectedRoom.name\r\n                        }</p>\r\n                    <span className='header__description'>\r\n                        {\r\n                            !selectedRoom ? '' : selectedRoom.description\r\n                        }</span>\r\n                </div>\r\n                <ButtonGroupStyled>\r\n                    <Dropdown.Button style={\r\n                        { bordered: 'none' }\r\n                    }\r\n                        icon={<SettingOutlined />}\r\n                        overlay={menu}></Dropdown.Button>\r\n                </ButtonGroupStyled>\r\n            </HeaderStyled>\r\n\r\n            <ContentStyled> {\r\n                loadingListMessage()\r\n            }\r\n                {\r\n                    sendForm()\r\n                } </ContentStyled>\r\n        </WrapperStyled>\r\n    )\r\n\r\n\r\n    return (\r\n        <>\r\n            <ReactAudioPlayer src=\"mess.mp3\" className=\"audio\" /> {\r\n                selectedRoomId ? <>{\r\n                    mainLayout()\r\n                }</> : <>{\r\n                    noSelectRoom()\r\n                }</>\r\n            }</>\r\n    )\r\n\r\n}\r\n\r\nexport default ChatWindow;\r\n","import { LockTwoTone, UnlockTwoTone } from '@ant-design/icons';\r\nimport { Button, Collapse, Tooltip, Typography } from 'antd';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { db } from '../../firebase/Config';\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  \r\n\r\n\r\n  &&& {\r\n    .ant-collapse-header\r\n    ,\r\n    p {\r\n      color: blue;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 10px;\r\n      max-height: 290px;\r\n      overflow-y: auto;\r\n    }\r\n    .ant-typography:hover {\r\n      textShadow: rgb(222 222 222) 0px 0px 7px;\r\n      background-color: #f1f1f1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    .ant-typography{\r\n      color: #000;\r\n      font-weight: 400;\r\n    }\r\n\r\n    .add-room {\r\n      color: #456;\r\n      margin: 15px 0 10px 90px;\r\n      padding: 3px 8px 5px 8px;      \r\n      border: 1px solid #aaa;\r\n    }\r\n\r\n    .add-room:hover{\r\n      color: #fff;\r\n      background-color: #ccc;\r\n      border: 1px solid #bbb;\r\n      box-shadow: 1px 1px 8px 0px #bbb;\r\n    }\r\n \r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: -1px;\r\n  color: #ddd; \r\n  padding: 15px 10px 15px 10px;\r\n  border-radius: 5px;\r\n  \r\n`;\r\n\r\nconst CollapseStyled = styled(Collapse)`\r\n    border-bottom: 1px solid #ccc;\r\n    box-shadow: 0px 9px 7px -9px #ccc;\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n     \r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \r\n        -webkit-border-radius: 10px;\r\n        border-radius: 10px;\r\n    }\r\n     \r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        -webkit-border-radius: 10px;\r\n        border-radius: 10px;\r\n        background: #ccc; \r\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \r\n    }\r\n    ::-webkit-scrollbar-thumb:window-inactive {\r\n        background: rgba(255,0,0,0.4); \r\n    }\r\n\r\n`;\r\n\r\n\r\nfunction RoomLists() {\r\n    const { rooms, setIsAddRoomVisible, setSelectedRoomId, selectedRoomId } = useContext(AppContext);\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n    // const [rooms2, setRooms2] = useState();\r\n    useEffect(() => {console.log(rooms);\r\n        const abc = db.collection('notifys').doc(uid).onSnapshot((snap) => {\r\n            snap.data().countNotify.forEach((item) => {\r\n                \r\n                const de = rooms.map((item2) => item2);\r\n                console.log(de);\r\n                return;\r\n            })\r\n\r\n            return abc;\r\n        })\r\n\r\n        return abc;\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <CollapseStyled defaultActiveKey=\"0\" ghost>\r\n            <PanelStyled header=\"Nhóm của bạn\" key=\"1\">\r\n                {\r\n                    rooms.length !== 0 ? <>{\r\n                        rooms.map((room) => (\r\n                            <LinkStyled key={\r\n                                room.id\r\n                            }\r\n                                onClick={\r\n                                    () => setSelectedRoomId(room.id)\r\n                                }\r\n                                style={\r\n                                    room.id === selectedRoomId ? {\r\n                                        textShadow: 'rgb(222 222 222) 0px 0px 7px',\r\n                                        backgroundColor: '#f1f1f1',\r\n                                        transition: 'all 0.2s',\r\n                                        color: '#000',\r\n                                        // fontWeight: '500'\r\n                                    } : {}\r\n                                }\r\n                                className=\"chu\">\r\n                                {\r\n                                    room.name\r\n                                }\r\n                                <> {\r\n                                    Array.from(room.members).length === 1 ? <Tooltip title=\"Nhóm chỉ có mình bạn, hãy mời thêm bạn bè.\" placement=\"right\">\r\n                                        <LockTwoTone style={\r\n                                            {\r\n                                                fontSize: '16pt',\r\n                                                float: 'right'\r\n                                            }\r\n                                        } />\r\n                                    </Tooltip> : <Tooltip title=\"Nhóm có cả bạn bè của bạn\" placement=\"right\">\r\n                                        <UnlockTwoTone style={\r\n                                            {\r\n                                                fontSize: '16pt',\r\n                                                float: 'right'\r\n                                            }\r\n                                        } />\r\n                                    </Tooltip>\r\n                                } </>\r\n\r\n                            </LinkStyled>\r\n                        ))\r\n                    }</> : <p style={\r\n                        {\r\n                            color: 'gray',\r\n                            margin: '10px 0px 7px 30px'\r\n                        }\r\n                    }>Bạn chưa tham gia nhóm nào</p>\r\n                }\r\n                <Button type='text' className='add-room'\r\n                    onClick={\r\n                        () => setIsAddRoomVisible(true)\r\n                    }>\r\n                    Tạo nhóm\r\n                </Button>\r\n                <ReactAudioPlayer src=\"mess.mp3\" className=\"audio\" />\r\n\r\n            </PanelStyled>\r\n        </CollapseStyled>\r\n    );\r\n}\r\n\r\nexport default RoomLists;\r\n","import { PoweroffOutlined } from '@ant-design/icons';\r\nimport { Avatar, Button, Tooltip, Typography } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport firebase, { auth } from '../../firebase/Config';\r\n\r\n\r\nconst UserInfoStyled = styled.div` \r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 12px 16px;\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: -4px -1px 9px 1px #ccc;\r\n\r\n.username {\r\n  margin-left: 10px;\r\n  font-size: 16pt;\r\n  font-weight: 700;\r\n}\r\n\r\n.logout:hover{\r\n    color: red;\r\n    border-radius: 50%;\r\n}\r\n\r\n.logout{\r\n    border-radius: 50%;\r\n}\r\n`;\r\n\r\n\r\nfunction UserInfo() {\r\n\r\n    const {\r\n        user: {\r\n            displayName,\r\n            photoURL,\r\n            uid\r\n        }\r\n    } = useContext(AuthContext);\r\n    const { clearState } = useContext(AppContext);\r\n\r\n    if (uid !== undefined) {\r\n        var userRef = firebase.firestore().doc('/users/' + uid);\r\n    }\r\n    var isOfflineForFirestore = {\r\n        status: 'offline',\r\n        last_changed: firebase.firestore.FieldValue.serverTimestamp()\r\n    };\r\n\r\n    return (\r\n        <UserInfoStyled>\r\n            <div>\r\n                <Tooltip placement=\"right\"\r\n                    title={displayName}>\r\n                    <Avatar size='large'\r\n                        src={photoURL}>\r\n                        {\r\n                            photoURL ? '' : displayName?.charAt(0)\r\n                        }</Avatar>\r\n                </Tooltip>\r\n\r\n                <Typography.Text className=\"username\">Chat</Typography.Text>\r\n            </div>\r\n            <Tooltip title=\"Đăng xuất\" placement=\"top\">\r\n                <Button className=\"logout\"\r\n                    icon={<PoweroffOutlined />}\r\n                    style={\r\n                        { border: 'none' }\r\n                    }\r\n                    onClick={\r\n                        () => {\r\n\r\n                            auth.signOut();\r\n                            clearState();\r\n                            userRef.update(isOfflineForFirestore);\r\n\r\n                        }\r\n                    }></Button>\r\n            </Tooltip>\r\n\r\n        </UserInfoStyled>\r\n    );\r\n}\r\n\r\nexport default UserInfo;\r\n","import { Avatar, Collapse, Typography } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport UseFirestore from '../../hooks/UseFirestore';\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n\r\n  \r\n\r\n\r\n  &&& {\r\n    .ant-collapse-header{\r\n        color: blue;\r\n        font-weight: 500;\r\n    }\r\n    p {\r\n      font-weight: 500;\r\n      \r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 40px;\r\n      max-height: 290px;\r\n      overflow-y: auto;\r\n    }\r\n\r\n    .add-room {\r\n      color: #123;\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: blue;\r\n  \r\n`;\r\n\r\nconst DivStyled = styled.div`\r\n    display: flex;\r\n    margin: 15px 10px 10px 0px;\r\n    .user{\r\n        color: #123;\r\n        margin-left: 10px;\r\n    }\r\n    .status{\r\n      color: blue;\r\n      position: absolute;\r\n      right: 8%;\r\n    }\r\n    .status1{\r\n        color: #555;\r\n        position: absolute;\r\n        right: 8%;\r\n      }\r\n    .status2{\r\n        color: #999;\r\n        position: absolute;\r\n        right: 8%;\r\n    }\r\n`;\r\n\r\nconst CollapseStyled = styled(Collapse)`\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: 0px 9px 7px -9px #ccc;\r\n\r\n`;\r\n\r\nfunction UserLists() {\r\n\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n\r\n    const users = UseFirestore('users','');\r\n    \r\n    return (\r\n        <CollapseStyled defaultActiveKey=\"1\" ghost>\r\n            <PanelStyled header=\"Danh sách bạn bè\" key=\"1\">\r\n                {\r\n                    Array.from(users).filter(user => user.uid !== uid).map((user) => {\r\n\r\n                        return (\r\n                            <DivStyled key={\r\n                                user.uid\r\n                            }>\r\n\r\n                                <Avatar size=\"small\"\r\n                                    src={\r\n                                        user.photoUrl\r\n                                    }>\r\n                                    {\r\n                                        user.photoUrl ? '' : user.displayName.charAt(0)\r\n                                    }</Avatar>\r\n                                <LinkStyled className=\"user\">\r\n                                    {\r\n                                        user.displayName\r\n                                    }</LinkStyled>\r\n\r\n                                {\r\n                                    user.status === 'online' ? <p className=\"status\">Online</p> : <></>\r\n                                }\r\n\r\n                                {\r\n                                    user.status === 'offline' ? <p className=\"status2\">Offline</p> : <></>\r\n                                }\r\n                                {\r\n                                    user.status === 'away' ? <p className=\"status1\">Sleep</p> : <></>\r\n                                } </DivStyled>\r\n                        )\r\n                    })\r\n                } </PanelStyled>\r\n        </CollapseStyled>\r\n    );\r\n}\r\n\r\nexport default UserLists;\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport RoomLists from './RoomLists';\r\nimport UserInfo from './UserInfo';\r\nimport UserLists from \"./UserLists\";\r\n\r\nconst SidebarStyled = styled.div`\r\n  background: #fff;\r\n  color: black;\r\n  height: 100vh;\r\n  border-right: 1px solid #ccc;\r\n  magrin: 20px\r\n`;\r\n\r\n\r\nfunction SideBar() {\r\n    return (\r\n        <SidebarStyled>\r\n            <Row>\r\n                <Col span=\"24\">\r\n                    <UserInfo />\r\n                    <RoomLists />\r\n                    <UserLists />\r\n                </Col>\r\n            </Row>\r\n        </SidebarStyled>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport ChatWindow from './ChatWindow';\r\nimport SideBar from './SideBar';\r\n\r\nfunction ChatRoom() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span=\"5\">\r\n                    <SideBar />\r\n                </Col>\r\n                <Col span=\"19\">\r\n                    <ChatWindow />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n","import { FacebookFilled, GoogleOutlined } from '@ant-design/icons';\r\nimport firebase from '@firebase/app';\r\nimport { Button, Col, Row, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { auth } from '../../firebase/Config';\r\nimport { generateKeywords, setDocuments } from '../../firebase/Service';\r\nconst { Title } = Typography\r\n\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\nconst ggProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nfunction Login() {\r\n    const handleLoginGoogle = async () => {\r\n        if (Notification.permission === \"granted\") {\r\n            const { additionalUserInfo, user } = await auth.signInWithPopup(ggProvider);\r\n            if (additionalUserInfo.isNewUser) {\r\n                setDocuments('users', {\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    photoUrl: user.photoURL,\r\n                    uid: user.uid,\r\n                    providerId: additionalUserInfo.providerId,\r\n                    keywords: generateKeywords(user.displayName?.toLowerCase()),\r\n                    countNotify: [],\r\n                    status: '',\r\n                    last_changed: '',\r\n                })\r\n                setDocuments('notifys',{\r\n                    countNotify: [],\r\n                    uid: user.uid\r\n                });\r\n\r\n            }\r\n        } else {\r\n            alert(\"Vui lòng cho phép thông báo\");\r\n            Notification.requestPermission();\r\n        }\r\n\r\n    }\r\n    \r\n    const handleLoginFacebook = () => {\r\n        auth.signInWithPopup(fbProvider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row justify='center'\r\n                style={\r\n                    { height: 800 }\r\n                }>\r\n                <Col span={10}>\r\n                    <Title style={\r\n                        {\r\n                            textAlign: 'center',\r\n                            margin: '30px'\r\n                        }\r\n                    }\r\n                        level={2}>\r\n                        Đăng nhập để tham gia với chúng tôi\r\n                    </Title>\r\n                    <Button icon={<GoogleOutlined />}\r\n                        style={\r\n                            {\r\n                                width: '100%',\r\n                                fontSize: '16px',\r\n                                color: 'red',\r\n                                height: '40px'\r\n\r\n                            }\r\n                        }\r\n                        onClick={\r\n                            () => handleLoginGoogle()\r\n                        }>\r\n                        Đăng nhập bằng Google\r\n                    </Button>\r\n                    <Button icon={<FacebookFilled />}\r\n                        style={\r\n                            {\r\n                                marginTop: '5px',\r\n                                width: '100%',\r\n                                fontSize: '16px',\r\n                                color: 'blue',\r\n                                height: '40px'\r\n                            }\r\n                        }\r\n                        onClick={handleLoginFacebook}>\r\n                        Đăng nhập bằng Facebook (beta)\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { Input, message } from 'antd';\r\nimport Form, { useForm } from 'antd/lib/form/Form';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { AuthContext } from '../context/AuthProvider';\r\nimport { db } from '../firebase/Config';\r\nimport { addDocuments } from '../firebase/Service';\r\n\r\nexport default function AddRoom() {\r\n\r\n    const [form] = useForm();\r\n    const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n\r\n    const users = []\r\n\r\n    const handleOk = () => {\r\n        if (form.getFieldValue()?.name && form.getFieldValue()?.description) {\r\n            addDocuments('rooms', {\r\n                ...form.getFieldsValue(),\r\n                members: [uid]\r\n            });\r\n            form.resetFields();\r\n            setIsAddRoomVisible(false);\r\n            db.collection('rooms').where('members','array-contains', uid).orderBy('createAt').onSnapshot((snap)=>{\r\n                const rooms = snap.docs.map((doc)=>(\r\n                    {id: doc.id}\r\n                ))\r\n                const roomid = rooms[rooms.length-1]?.id;\r\n                Array.from(users).forEach((user)=>{\r\n                    db.collection('notifys').doc(user.uid).collection(user.uid).doc(roomid).set({\r\n                        count: 0\r\n                    })\r\n                })\r\n                return;\r\n            })\r\n            \r\n            \r\n\r\n\r\n            \r\n        } else {\r\n            message.info('Bạn cần nhập đầy đủ thông tin');\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsAddRoomVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal title='Tạo nhóm'\r\n                visible={isAddRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}>\r\n                <Form layout=\"vertical\"\r\n                    form={form}>\r\n                    <FormItem label=\"Tên nhóm\" name=\"name\">\r\n                        <Input name=\"name\" placeholder=\"Nhập tên nhóm\" autoComplete=\"off\"\r\n                            rules={\r\n                                [{\r\n                                    required: true\r\n                                }]\r\n                            }></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"Mô tả\" name=\"description\">\r\n                        <Input name=\"description\" placeholder=\"Nhập mô tả\" autoComplete=\"off\"\r\n                            rules={\r\n                                [{\r\n                                    required: true\r\n                                }]\r\n                            }></Input>\r\n                    </FormItem>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import {Form, message, Select, Spin} from 'antd'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport debounce from 'lodash.debounce'\r\nimport React, {useContext, useState} from 'react'\r\nimport {AppContext} from '../context/AppProvider'\r\nimport {db} from '../firebase/Config'\r\n\r\nfunction DebounceSelect({\r\n    fetchOptions,\r\n    debounceTimeout = 300,\r\n    curMembers,\r\n    ...props\r\n}) { // Search: abcddassdfasdf\r\n\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const debounceFetcher = React.useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            setOptions([]);\r\n            setFetching(true);\r\n\r\n            fetchOptions(value, curMembers).then((newOptions) => {\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n    React.useEffect(() => {\r\n        return() => { // clear when unmount\r\n            setOptions([]);\r\n        };\r\n    }, []);\r\n    return (<Select labelInValue\r\n        filterOption={false}\r\n        onSearch={debounceFetcher}\r\n        notFoundContent={\r\n            fetching ? <Spin size='small'/> : <p style={{marginTop: '10px', color: '#345'}}>Bạn bè đã ở trong nhóm sẽ không xuất hiện ở đây !</p>\r\n        }\r\n        {...props}> {\r\n        options.map((opt) => (<Select.Option key={\r\n                opt.value\r\n            }\r\n            value={\r\n                opt.value\r\n            }\r\n            title={\r\n                opt.label\r\n        }>\r\n            <Avatar size='small'\r\n                src={\r\n                    opt.photoURL\r\n            }> {\r\n                opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()\r\n            } </Avatar>\r\n            {\r\n            ` ${\r\n                opt.label\r\n            }`\r\n        } </Select.Option>))\r\n    } </Select>);\r\n}\r\n\r\nasync function fetchUserList(search, curMembers) {\r\n    return db.collection('users').where('keywords', 'array-contains', search?.toLowerCase()).orderBy('displayName').limit(20).get().then((snapshot) => {\r\n\r\n        return snapshot.docs.map((doc) => ({label: doc.data().displayName, value: doc.data().uid, photoURL: doc.data().photoURL})).filter((opt) => ! curMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n    const {isInviteMemberVisible, setIsInviteMemberVisible, selectedRoomId, selectedRoom} = useContext(AppContext);\r\n    const [value, setValue] = useState([]);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = () => { // reset form value\r\n        form.resetFields();\r\n        setValue([]);\r\n        // update members in current room\r\n        const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n        roomRef.update({\r\n            members: [\r\n                ...selectedRoom.members,\r\n                ...value.map((val) => val.value)\r\n            ]\r\n        });\r\n        const len = value.length;\r\n        if (len !== 0) {\r\n            message.success('Đã thêm ' + len + ' thành viên');\r\n        }\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => { // reset form value\r\n        form.resetFields();\r\n        setValue([]);\r\n\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    return (<div>\r\n        <Modal title='Mời thêm bạn bè'\r\n            visible={isInviteMemberVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}>\r\n            <Form form={form}\r\n                layout='vertical'>\r\n                <p>Nhập họ tên</p>\r\n                <DebounceSelect mode='multiple' name='search-user' label='Tên các thành viên' \r\n                    value={value}\r\n                    placeholder='Nhập * để hiển thị tất cả bạn bè'\r\n                    fetchOptions={fetchUserList}\r\n                    onChange={\r\n                        (newValue) => setValue(newValue)\r\n                    }\r\n                    style={\r\n                        {width: '100%'}\r\n                    }\r\n                    curMembers={\r\n                        selectedRoom.members\r\n                    }/>\r\n            </Form>\r\n        </Modal>\r\n    </div>);\r\n}\r\n","import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Button, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { AuthContext } from '../context/AuthProvider';\r\n\r\nconst LinkStyled = styled(Typography.Text)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: blue;\r\n`;\r\n\r\nconst DivStyled = styled.div`\r\n    display: flex;\r\n    margin: 15px 10px 10px 0px;\r\n    align-item: center;\r\n    .user{\r\n        color: #123;\r\n        margin: 7px 15px 9px 15px;\r\n        font-weight: 500;\r\n    }\r\n    .status{\r\n      color: #123;\r\n      position: absolute;\r\n      right: 8%;\r\n    }\r\n    p{\r\n        margin-top:6px;\r\n    }\r\n\r\n    .baChamIcon{\r\n        font-size:'15pt';\r\n        margin-top:'3px';\r\n    }\r\n`;\r\n\r\nexport default function ListMember() {\r\n\r\n    const { members, setIsShowMembersVisible, isShowMembersVisible } = useContext(AppContext);\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n    const handleOk = () => {\r\n        setIsShowMembersVisible(false);\r\n    }\r\n\r\n    return (\r\n        <Modal title={\r\n            \"Danh sách thành viên (\" + Array.from(members).length + \")\"\r\n        }\r\n            visible={isShowMembersVisible}\r\n            onCancel={handleOk}\r\n            onOk={handleOk}>\r\n            {\r\n                Array.from(members).map((user) => (\r\n                    <DivStyled key={\r\n                        user.uid\r\n                    }>\r\n                        <Avatar size=\"large\"\r\n                            src={\r\n                                user.photoUrl\r\n                            }>\r\n                            {\r\n                                user.photoUrl ? '' : user.displayName.charAt(0)\r\n                            }</Avatar>\r\n                        <LinkStyled className=\"user\">\r\n                            {\r\n                                uid === user.uid ? 'Bạn' : user.displayName\r\n                            }</LinkStyled>\r\n                        <Button style={\r\n                            {\r\n                                borderRadius: '50%',\r\n                                float: 'right',\r\n                                position: 'absolute',\r\n                                left: '85%',\r\n                                marginTop: '2px'\r\n                            }\r\n                        }\r\n                            icon={\r\n                                <EllipsisOutlined\r\n                                    className=\"baChamIcon\" />\r\n                            }></Button>\r\n                        { } </DivStyled>\r\n                ))\r\n            } </Modal>\r\n    )\r\n}\r\n","import {\n    BrowserRouter,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport './App.css';\nimport ChatRoom from './components/ChatRoom/ChatRoom';\nimport Login from './components/Login/Login';\nimport AppProvider from './context/AppProvider';\nimport AuthProvider from './context/AuthProvider';\nimport AddRoom from './modals/AddRoom';\nimport InviteMember from './modals/InviteMember';\nimport ListMember from './modals/ListMember';\nfunction App() {\n    return (\n        <BrowserRouter>\n            <AuthProvider>\n                <AppProvider>\n                    <Switch>\n                        <Route path=\"/login\"><Login/></Route>\n                        <Route path=\"/\"><ChatRoom/></Route>\n                        \n                    </Switch>\n                    <AddRoom/>\n                    <InviteMember/>\n                    <ListMember/>\n                </AppProvider>\n\n            </AuthProvider>\n\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}